apply plugin: 'scala'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'us.kirchmeier.capsule'

repositories { jcenter() }

dependencies {
	compile 'org.scala-lang:scala-library:2.11.6'
	compile 'org.scala-lang:scala-reflect:2.11.6'
	//misc
	compile 'commons-codec:commons-codec:1.10'
	compile 'com.google.code.gson:gson:2.3.1'

	//akka actors
	compile 'com.typesafe.akka:akka-actor_2.11:2.3.6'
	compile 'com.typesafe.akka:akka-testkit_2.11:2.3.6'

	//
	compile 'io.spray:spray-client_2.11:1.3.1'

	//logging
	compile 'ch.qos.logback:logback-classic:1.1.2'
	compile 'com.typesafe.akka:akka-slf4j_2.11:2.3.9'

	//encryption
	compile 'org.bouncycastle:bcprov-jdk15on:1.51'

	testCompile 'org.scalatest:scalatest_2.11:2.2.3'
}

mainClassName = "com.spooky.bittorrent.BittorrentClient"

jar {
	manifest { attributes 'Main-Class': mainClassName }
}

eclipse {
	project {
	}
	classpath {
		file {
			withXml {
				def node = it.asNode()
				node.appendNode('classpathentry', [combineaccessrules: 'false',kind:'src', path:'/bittorrent-shared'])
				node.appendNode('classpathentry', [combineaccessrules: 'false',kind:'src', path:'/message-stream-encryption'])
				node.appendNode('classpathentry', [combineaccessrules: 'false',kind:'src', path:'/bencode'])
				node.appendNode('classpathentry', [combineaccessrules: 'false',kind:'src', path:'/dht'])
			}
		}
	}
}

//buildscript {
//	plugins { id "us.kirchmeier.capsule" version "1.0-rc1" }
//}
//
buildscript {
	repositories { jcenter() }
	dependencies { classpath 'us.kirchmeier:gradle-capsule-plugin:1.0-rc1' }
}

task fatCapsule(type: FatCapsule) {
	applicationClass mainClassName
	classifier 'fat'
	capsuleManifest {
		//		systemProperties = ['java.awt.headless': true]
	}
}